/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) 
    {
        int n = nums.length;
        return binaryST(nums, 0, n-1);

    }

    public TreeNode binaryST(int[] nums, int start, int end) 
    {
        if (start == end) 
        {
            return new TreeNode(nums[start]);
        }

        if (end < start) 
        {
            return null;
        }

        int mid = (start + end) / 2;

        TreeNode t = new TreeNode(nums[mid]);

        t.left = binaryST(nums, start, mid - 1);
        t.right = binaryST(nums, mid + 1, end);

        return t;
    }

}
