/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution 
{
    public List<Integer> postorder(Node root) 
    {
        if(root == null)
        {
            return new ArrayList<>();
        }

        ArrayList<Integer> result = new ArrayList<>();
        Deque<Node> stack = new ArrayDeque<>();
        stack.push(root);

        while(!stack.isEmpty()) 
        {
            root = stack.pop();
            result.add(root.val);
            
            for(Node child : root.children)
            {
                stack.push(child);


            }
        
        }

        Collections.reverse(result);
        return result;



        
    }
}
