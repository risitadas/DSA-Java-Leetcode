class Solution {
    public double soupServings(int n) 
    {

        if(n >= 4300)
        {
            return 1.0;

        }

        int m = (n+24)/25;

        return helper(m, m, new double[m+1][m+1]);



        
    }


    public double helper(int x, int y, double[][] dp)
    {

        if(x <= 0 && y <= 0)
        {
            return 0.5;

        }
        if(x <= 0)
        {
            return 1.0;

        }
        if(y <= 0)
        {
            return 0.0;

        }

        if(dp[x][y] > 0)
        {
            return dp[x][y];


        }


        return dp[x][y] = 0.25 * (helper(x-4, y, dp) + helper(x-3, y-1, dp) + helper(x-2, y-2, dp) + helper(x-1, y-3, dp));

        



    }
}
