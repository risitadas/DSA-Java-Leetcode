class Solution {
    public int minSubarray(int[] nums, int p) 
    {
        int n = nums.length;
        long totalSum = 0;
        for(int num : nums)
        {
            totalSum += num;

        }

        int rem = (int)(totalSum%p);
        if(rem == 0) return 0;

        HashMap<Integer, Integer> map = new HashMap<>();   //prefixSums
        map.put(0, -1);

        int prefixSum = 0, min = n;

        for(int i=0; i<n; i++)
        {
            prefixSum = (prefixSum + nums[i]) % p;

            if(prefixSum < 0)
            {
                prefixSum += p;

            }

            int target = (prefixSum - rem + p) % p;

            if(map.containsKey(target))
            {

                min = Math.min(min, i-map.get(target));

            }

            map.put(prefixSum, i);

        }

        return min == n ? -1 : min;






        
    }
}
