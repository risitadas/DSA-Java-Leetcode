
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {


    public List<Integer> inorderTraversal(TreeNode root) 
    {
        List<Integer> result = new ArrayList<>();
        helper(root, result);
        return result;

    }

    public void helper(TreeNode root, List<Integer> result) 
    {
        if (root != null) 
        {
            helper(root.left, result);

            result.add(root.val);

            helper(root.right, result);
            
        }
    }


/*
    public List<Integer> inorderTraversal(TreeNode root) 
    {

        traverse(root);
        return result;
 
    }

    public List<Integer> result = new ArrayList<>();

    public void traverse(TreeNode root) 
    {
        if (root == null) 
        {
            return;
        }

        traverse(root.left);
        result.add(root.val);
        traverse(root.right);

    }
    */




}
