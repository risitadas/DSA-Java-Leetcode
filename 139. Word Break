class Solution {
    public boolean wordBreak(String s, List<String> wordDict) 
    {
    
    //    return dict(s, wordDict, 0);

        Boolean [] dp = new Boolean[s.length()];
        return sol(0, s, wordDict, dp);


        
    }


    public boolean sol(int index, String s, List<String> word, Boolean[] dp)
    {

        int n = s.length();

        if(index == n)
        {
            return true;

        }

        if(dp[index] != null)
        {
            return dp[index];

        }

        for(int i = index+1; i<=n;i++)
        {

            if(word.contains(s.substring(index, i)) && sol(i, s, word, dp))
            {

                return dp[index] = true;

            }
        }

        return dp[index] = false;






    }

    /*

    public boolean dict(String A, List<String> B, int word)
    {

        if(word == A.length())
        {
            return true;
            
        }
        
        String str = "";
        
        for(int i = word; i< A.length(); i++)
        {
            
            str += A.charAt(i);
            
            if(B.contains(str))
            {
                
                if(dict(A, B, i+1) == true)
                {
                    
                    return true;
                    
                }
            }
        }
        
        return false;

    }


    */
}
