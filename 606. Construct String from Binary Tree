/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution 
{
    public String tree2str(TreeNode root) 
    {
        StringBuilder result = new StringBuilder();
        dfs(root, result);
        return result.toString();
    }


    public static void dfs(TreeNode root, StringBuilder result) 
    {
        if (root == null)
        {
            return;
        }  

        result.append(String.valueOf(root.val));

        if (root.left == null && root.right == null)
        {
            return;
        }

        result.append('(');

        dfs(root.left, result);
        
        result.append(')');
        
        if (root.right != null) 
        {
            result.append('(');
            dfs(root.right, result);
            result.append(')');

        }

    }


}









 /*
class Solution {
    public String tree2str(TreeNode root) 
    {
        return dfs(root);

        
    }

    public String dfs(TreeNode root) 
    {
        if (root == null)
        {
            return "";
        }

        if (root.right != null)
        {
            return root.val + "(" + dfs(root.left) + ")(" + dfs(root.right) + ")";
        }
        
        if (root.left != null)
        {
            return root.val + "(" + dfs(root.left) + ")";

        }
        
        return root.val + "";
  }

}

*/
