class Solution {

    public int binarySearch(int[] arr, int target) 
    {
        int n = arr.length;
        int result = n, left = 0, right = n - 1;

        while (left <= right) 
        {
            int mid = (left + right) >> 1;

            if (arr[mid] >= target) 
            {
                result = mid;
                right = mid - 1;
            } 
            else 
            {
                left = mid + 1;
            }
        }

        return result;
    }




    public int[] fullBloomFlowers(int[][] flowers, int[] people) 
    {

        int n = flowers.length, m = people.length;
        int[] start = new int[n], end = new int[n];
        int[] result = new int[m];

        for(int i=0; i<n; i++)
        {
            start[i] = flowers[i][0];
            end[i] = flowers[i][1];

        }

        Arrays.sort(end); Arrays.sort(start);

        for (int i = 0; i < m; i++) 
        {
            int s = binarySearch(start, people[i] + 1);
            int e = binarySearch(end, people[i]);
            result[i] = s-e;
        }
        return result;


        




        
    }



}
