class Solution {
    public int minFallingPathSum(int[][] matrix) 
    {

        int n = matrix.length;
        int result = Integer.MAX_VALUE;

        getminFallingPathSum(matrix, n, n - 2);
        
        for(int i = 0; i < n; i++)
        {
            if(result > matrix[0][i])
            {
                result = matrix[0][i];
            }
             
        }
        return result;


    }

    public void getminFallingPathSum(int[][] matrix, int n, int row)
    {
        if(row <0)
        {
            return;

        }

        for(int i=0; i<n ;i++)
        {
            int min = matrix[row+1][i] + matrix[row][i];

            if(i>0)
            {
                min = Math.min(min, matrix[row+1][i-1] + matrix[row][i]);

            }

            if(i < n-1)
            {
                min = Math.min(min, matrix[row+1][i+1] + matrix[row][i]);

            }
            matrix[row][i] = min;

        }

        getminFallingPathSum(matrix, n, row-1);
        



    }
}
