class Solution {
    public int countGoodStrings(int low, int high, int zero, int one) 
    {

        int[] dp = new int[high + 1];
        dp[0] = 1;
        int mod = 1000000007;

        for (int end = 1; end <= high; end++) 
        {
            
            if (end >= zero) 
            {
                dp[end] += dp[end - zero];
            }

            if (end >= one) 
            {
                dp[end] += dp[end - one];
            }
            dp[end] %= mod;
        }

        int answer = 0;
        for (int i = low; i <= high; i++) 
        {
            answer += dp[i];
            answer %= mod;
        }
        return answer;





        /*
     //   int mod = (int)1e9 + 7;
     int mod = 1000000007;

        HashMap<Integer, Integer> dp = new HashMap<>();
        dp.put(0, 1);
      
        for (int i = 1; i <= high; i++) 
        {
            
            int z = dp.getOrDefault(i - zero, 0);
            int o = dp.getOrDefault(i - one, 0);
            int n = (z + o) % mod;
            
            dp.put(i, n);
        }
        
        int result = 0;
        for (int i = low; i <= high; i++) 
        {
            result = (result + dp.getOrDefault(i, 0)) % mod;
        }
        
       
        return result;

        */

        
    }
}
