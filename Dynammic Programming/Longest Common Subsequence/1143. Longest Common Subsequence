class Solution {
    public int longestCommonSubsequence(String text1, String text2) 
    {

        char[] s1 = text1.toCharArray();
        char[] s2 = text2.toCharArray();

        int len1 = s1.length;
        int len2 = s2.length;

        int[] dp = new int[len2 + 1];

        for (int i = 0; i < len1; i++) 
        {
            int prev = dp[0];

            for (int j = 1, len = dp.length; j < len; j++) 
            {
                int temp = dp[j];
                if (s1[i] == s2[j - 1]) 
                {
                    dp[j] = prev + 1;
                } 
                else 
                {
                    dp[j] = Math.max(dp[j - 1], dp[j]);
                }

                prev = temp;
            }
        }  
        
        return dp[len2];




        /*
        int m = text1.length();
        int n = text2.length();

        int[][] dp = new int[m + 1][n + 1];

        for (int i = 1; i <= m; i++) {
            for (int j = 1; j <= n; j++) 
            {
                if (text1.charAt(i - 1) == text2.charAt(j - 1)) 
                {

                    dp[i][j] = 1 + dp[i - 1][j - 1];
                } 
                else 
                {
                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);
                }
            }
        }

        return dp[m][n];

        */

        
    }
}
