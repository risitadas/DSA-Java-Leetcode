class Solution {
    public int minInsertions(String s) 
    {

        if (s.length() < 2 || s == null)
        {
            return 0;
        }

        char[] str = s.toCharArray();
        int N = str.length;
        int[][] dp = new int[N][N];
    
        for (int i = 0; i < N - 1; i++) 
        {
            dp[i][i+1] = str[i] == str[i + 1] ? 0 : 1;
        }

        for (int i = N - 3; i >= 0 ; i--) 
        {
            for (int j = i + 2; j < N; j++) 
            {
                dp[i][j] = Math.min(dp[i + 1][j],dp[i][j-1]) + 1;
                if (str[i] == str[j])
                {
                    dp[i][j] = dp[i + 1][j - 1];
                }
            }
        }
        
        return dp[0][N - 1];





        

        /*

        int n = s.length();
        int[] arr = new int[n];
        for (int i = n - 2; i >= 0; i--) 
        {
            int prev = 0;
            for (int j = i + 1; j < n; j++) 
            {
                int temp = arr[j];
                if (s.charAt(i) == s.charAt(j)) 
                {
                    arr[j] = prev;
                } 
                else 
                {
                    arr[j] = Math.min(arr[j], arr[j-1]) + 1;
                }
                prev = temp;
            }
        }
        return arr[n-1];

        */
    }
}
