class Solution {
    public boolean isHappy(int n) 
    {

        while(n>0)
        {
            int sum = 0;

            while(n>0)
            {
                int i = n % 10;
                n /= 10;
                sum += i*i;

            }

            n = sum;

            switch (n) 
            {
                case 1:
                case 7:
                    return true;
                default:
                    if(n < 9) 
                    {
                        return false;
                    }
                    
            }
        }

        return false;

        
    }
}



/*

RUNTIME 2 MS , MEMORY 41.66 MB

class Solution {

    public int SumOfSquare(int n)
    {
        int sumOfsqr = 0, digit;
        while(n!=0)
        {
            digit = n%10;
            sumOfsqr += digit*digit;
            n = n/10;
        }
        return sumOfsqr;
    }


    public boolean isHappy(int n) {

        int slow, fast;
        slow = fast = n;

        do
        {
            slow = SumOfSquare(slow);
            fast = SumOfSquare(SumOfSquare(fast));
            if(fast == 1)
            {
                return true;
            }

        }while(slow!=fast);

        return false;
        
    }
}

*/
