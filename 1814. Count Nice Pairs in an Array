class Solution {
    int kMod = 1_000_000_007;

    public int rev(int n) 
    {
        int x = 0;
        while (n > 0) 
        {
            x = x * 10 + (n % 10);
            n /= 10;
        }
        return x;
  }


    public int countNicePairs(int[] nums) 
    {

        int n = nums.length;
        long result = 0;
        HashMap<Integer, Long> count = new HashMap<>();

        for (int num : nums)
        {
            count.merge(num - rev(num), 1L, Long::sum);
        }

        for (long freq : count.values()) 
        {
            result += freq * (freq - 1) / 2;
            result %= kMod;
        }

        return (int)result;
        
    }



}
