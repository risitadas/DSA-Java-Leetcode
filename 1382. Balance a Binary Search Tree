/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode balanceBST(TreeNode root) 
    {

        ArrayList<Integer> nums = new ArrayList<>();
        inorder(root, nums);
        return build(nums, 0, nums.size() - 1);

        
    }

    public void inorder(TreeNode root, ArrayList<Integer> nums)
    {
        if(root == null)
        {
            return;

        }

        inorder(root.left, nums);
        nums.add(root.val);
        inorder(root.right, nums);



    }

    public TreeNode build(ArrayList<Integer> nums, int left, int right)
    {
        if(left >right)
        {
            return null;

        }

        int mid = (left+right)/2;

        return new TreeNode(nums.get(mid), build(nums, left, mid-1) , build(nums, mid+1, right));



    }




}
