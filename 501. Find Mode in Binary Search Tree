/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {


    public int[] findMode(TreeNode root) 
    {

        if(root == null)
        {

            return new int[10];

        }

        ArrayList<Integer> list = new ArrayList<>();

        inorder(root, list);

        int[] result = new int[list.size()];

        for(int i =0;i< list.size(); i++)
        {

            result[i] = list.get(i);
        }

        return result;


        
    }

    int count = 1, maxCount = 0;

    TreeNode prev;
    


    public void inorder(TreeNode root, ArrayList<Integer> list)
    {


        if(root == null)
        {

            return;

        }

        inorder(root.left, list);

        if(prev != null)
        {

            if(root.val == prev.val)
            {

                count++;
            }
            else
            {
                count= 1;

            }
        }


        prev = new TreeNode(root.val);

        if(count > maxCount)
        {

            maxCount = count;

            list.clear();

            list.add(root.val);;

            
        }
        else if(count == maxCount)
        {
            list.add(root.val);

        }

        inorder(root.right, list);











    }



}
