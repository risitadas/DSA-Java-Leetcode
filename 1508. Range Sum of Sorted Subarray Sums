class Solution 
{
    int MOD = (int)1e9+7;

    public int rangeSum(int[] nums, int n, int left, int right) 
    {
        int[] arr= new int[n*(n+1)/2];

        for(int i=0,k=0;i<n;i++)
        {
            int sum=0;
            for(int j=i;j<n;j++)
            {
               sum+=nums[j];
               arr[k++]=sum;
            }
        }

        Arrays.sort(arr);
        int sum=0;
        for(int i=left;i<=right;i++)
        {
            
            sum=(sum+arr[i-1]) % MOD;
        }
        
        return sum;
    }




/*

Runtime 170 ms, Memory 72.43 MB


    static int MOD = 1000000007;

    public int rangeSum(int[] nums, int n, int left, int right) 
    {

        ArrayList<Integer> subArrSum = new ArrayList<>();
        long rangeSum = 0;

        for(int i=0; i<n; i++)
        {
            int sum=0;

            for(int j=i; j<n; j++)
            {
                sum += nums[j];
                subArrSum.add(sum);

            }
        }

        Collections.sort(subArrSum);

        for(int i=left-1; i< right; i++)
        {
            rangeSum = (rangeSum + subArrSum.get(i)) % MOD;

        }

        return (int)rangeSum;
        
    }


    */
}
