/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) 
    {


        ListNode slow = head;
        ListNode fast = head;

        int maxSum = 0;

        while(fast != null && fast.next != null)
        {

            slow = slow.next;
            fast = fast.next.next;

        }

        ListNode tail = reverseList(slow);

        while(tail != null)
        {

            maxSum = Math.max(maxSum, head.val + tail.val);
            head = head.next;
            tail = tail.next;

        }

        return maxSum;


    }

    public ListNode reverseList(ListNode head)
    {


        ListNode dummy = null;

        while(head != null)
        {

            ListNode next = head.next;
            head.next = dummy;
            dummy = head;
            head = next;



        }

        return dummy;
    }
}
