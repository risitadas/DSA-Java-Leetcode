/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) 
    {

        
        if(root == null)
        {
            return 0;

        }

        int result = 0, max = Integer.MIN_VALUE, level = 0;

        Queue<TreeNode> que = new LinkedList<>();

        que.offer(root);

        while(!que.isEmpty())
        {

            level++;
            int sum = 0;

            for(int i= que.size(); i>0; i--)
            {

                TreeNode node = que.poll();

                sum += node.val;

                if(node.right != null)
                {

                    que.offer(node.right);
                }

                if(node.left != null)
                {

                    que.offer(node.left);

                }


            }

            if(sum > max)
            {

                max = sum;
                result = level;

            }


        }

        return result;










        
    }
}
