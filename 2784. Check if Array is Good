class Solution {
    public boolean isGood(int[] nums) 
    {
        /*
        
        int n = nums.length;
        
        if(n < 2)
        {
            
            return false;
        }
        
        int[] count = new int[201];
        
        for(int i =0 ;i<n;i++)
        {
            
            count[nums[i]]++;
            
        }
        
        if(count[n] != 2 || count[1] != 1)
        {
            
            return false;
            
        }
        
        for(int i=2; i<n;i++)
        {
            
            if(count[i] != 1)
            {
                
                return false;
            }
        }
        
        return true;
        
        
        
        */
        
        
        
        
        
        
        
        
        
        
        
        /*
        int n = nums.length;
        int count = 0;
        
        HashSet<Integer> hs = new HashSet<>();
        
        for(int num : nums)
        {
            
            if(num > n)
            {
                return false;
                
            }
            
            
            if(!hs.add(num))
            {
                
                count++;
                
                if(count > 2)
                {
                    return false;
                    
                }
            }
                
                
                
        }
        
        return count == 2 && hs.size() = n-1;
        
        
        
        
        */
        
        int n = nums.length;
        int count = 0, max = Integer.MIN_VALUE;
        
        HashSet<Integer> hs = new HashSet<>();
        
        for(int num : nums)
        {
            
            if(num > n)
            {
                return false;
                
            }
            
            if(num > max )
            {
                
                max = num;
                count = 1;
                
            }
            else if(num == max)
            {
                
                count++;
                
                if(count > 2)
                {
                    return false;
                    
                }
            }
            
            hs.add(num);
            
        }
        
        return count == 2 && hs.size() == n-1;
        
        
        
        
        
        
        
        
    }
}
